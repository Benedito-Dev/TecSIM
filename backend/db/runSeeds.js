const createTables = require('./dbinit');
const migrateProtocolos = require('./migrateProtocolos');
const seedProtocolos = require('./seedProtocolos');
const seedCondicoes = require('./seedCondicoes');

const runAllSeeds = async () => {
  try {
    console.log('üöÄ Iniciando processo completo de seed...\n');

    // 1. Criar tabelas primeiro
    console.log('üìä Criando/verificando tabelas...');
    await createTables();
    console.log('‚úÖ Tabelas prontas!\n');

    // 2. Migrar tabela protocolos
    console.log('üîß Migrando tabela protocolos...');
    await migrateProtocolos();
    console.log('‚úÖ Migra√ß√£o conclu√≠da!\n');

    // 3. Inserir protocolos
    console.log('ü©∫ Inserindo protocolos de triagem...');
    await seedProtocolos();
    console.log('‚úÖ Protocolos inseridos!\n');

    // 4. Inserir condi√ß√µes de exemplo
    console.log('üè• Inserindo condi√ß√µes m√©dicas de exemplo...');
    await seedCondicoes();
    console.log('‚úÖ Condi√ß√µes inseridas!\n');

    console.log('üéâ Processo de seed conclu√≠do com sucesso!');
    console.log('\nüìã Resumo:');
    console.log('   ‚Ä¢ Tabelas criadas/verificadas');
    console.log('   ‚Ä¢ Migra√ß√£o de protocolos executada');
    console.log('   ‚Ä¢ 3 protocolos base inseridos');
    console.log('   ‚Ä¢ 3 protocolos especializados inseridos');
    console.log('   ‚Ä¢ Condi√ß√µes m√©dicas de exemplo inseridas');
    console.log('\nüöÄ Sistema pronto para uso!');

  } catch (error) {
    console.error('‚ùå Erro durante o processo de seed:', error);
    process.exit(1);
  }
};

// Executar se chamado diretamente
if (require.main === module) {
  runAllSeeds()
    .then(() => process.exit(0))
    .catch((error) => {
      console.error('‚ùå Falha cr√≠tica:', error);
      process.exit(1);
    });
}

module.exports = runAllSeeds;