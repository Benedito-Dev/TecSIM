import api from '../api/api';

// üü¢ [GET] Lista todas as prescri√ß√µes
export const getPrescricoes = async () => {
  try {
    const response = await api.get('/prescricoes');
    return response.data;
  } catch (error) {
    console.error('Erro ao buscar prescri√ß√µes:', error.message);
    throw error;
  }
};

// üü¢ [GET] Busca prescri√ß√£o por ID
export const getPrescricaoById = async (id) => {
  try {
    const response = await api.get(`/prescricoes/${id}`);
    return response.data;
  } catch (error) {
    console.error(`Erro ao buscar prescri√ß√£o ID ${id}:`, error.message);
    throw error;
  }
};

// üü¢ [GET] Busca prescri√ß√µes por paciente
export const getPrescricoesByPaciente = async (id_paciente) => {
  try {
    const response = await api.get(`/prescricoes/paciente/${id_paciente}`);
    return response.data;
  } catch (error) {
    console.error(`Erro ao buscar prescri√ß√µes do paciente ${id_paciente}:`, error.message);
    throw error;
  }
};

// üü¢ [GET] Busca prescri√ß√µes por m√©dico
export const getPrescricoesByMedico = async (crm) => {
  try {
    const response = await api.get(`/prescricoes/medico/${crm}`);
    return response.data;
  } catch (error) {
    console.error(`Erro ao buscar prescri√ß√µes do m√©dico ${crm}:`, error.message);
    throw error;
  }
};

// üü° [POST] Cria uma nova prescri√ß√£o
export const createPrescricao = async (prescricaoData) => {
  try {
    const response = await api.post('/prescricoes', prescricaoData);
    return response.data;
  } catch (error) {
    // Tratamento de erro mais espec√≠fico
    if (error.response) {
      const errorMsg = error.response.data.error || 'Erro ao criar prescri√ß√£o';
      console.error('Erro detalhado:', errorMsg);
      throw new Error(errorMsg);
    } else if (error.request) {
      throw new Error('Sem resposta do servidor');
    } else {
      throw new Error('Erro ao configurar a requisi√ß√£o');
    }
  }
};

// üü† [PUT] Atualiza uma prescri√ß√£o existente
export const updatePrescricao = async (id, prescricaoData) => {
  try {
    const response = await api.put(`/prescricoes/${id}`, prescricaoData);
    return response.data;
  } catch (error) {
    console.error(`Erro ao atualizar prescri√ß√£o ID ${id}:`, error.message);
    throw error;
  }
};

// üî¥ [DELETE] Remove uma prescri√ß√£o
export const deletePrescricao = async (id) => {
  try {
    const response = await api.delete(`/prescricoes/${id}`);
    return response.data;
  } catch (error) {
    console.error(`Erro ao deletar prescri√ß√£o ID ${id}:`, error.message);
    throw error;
  }
};

// üü£ [GET] Busca medicamentos de uma prescri√ß√£o
export const getMedicamentosPrescricao = async (id_prescricao) => {
  try {
    const response = await api.get(`/prescricoes/${id_prescricao}/medicamentos`);
    return response.data;
  } catch (error) {
    console.error(`Erro ao buscar medicamentos da prescri√ß√£o ${id_prescricao}:`, error.message);
    throw error;
  }
};

// üü£ [POST] Adiciona medicamento a uma prescri√ß√£o
export const addMedicamentoPrescricao = async (id_prescricao, medicamentoData) => {
  try {
    const response = await api.post(`/prescricoes/${id_prescricao}/medicamentos`, medicamentoData);
    return response.data;
  } catch (error) {
    console.error(`Erro ao adicionar medicamento √† prescri√ß√£o ${id_prescricao}:`, error.message);
    throw error;
  }
};

// üü£ [DELETE] Remove medicamento de uma prescri√ß√£o
export const removeMedicamentoPrescricao = async (id_prescricao, id_medicamento) => {
  try {
    const response = await api.delete(`/prescricoes/${id_prescricao}/medicamentos/${id_medicamento}`);
    return response.data;
  } catch (error) {
    console.error(`Erro ao remover medicamento ${id_medicamento} da prescri√ß√£o ${id_prescricao}:`, error.message);
    throw error;
  }
};